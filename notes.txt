ONE DRIVE NOTEBOOK

https://onedrive.live.com/view.aspx?resid=AD7F40F390B59989%2110781&id=documents

############################
LESSON 1 - GETTING SET UP 
############################

https://learn.codeinstitute.net/courses/course-v1:CodeInstitute+FST101+2021_T1/courseware/dc049b343a9b474f8d75822c5fda1582/121ef050096f4546a1c74327a9113ea6/?child=last

Install Django

    * pip3 install django

Create project

    * django-admin startproject my_new_django .

Run project

    * Python3 manage.py runserver




############################
LESSON 2 - URLs
############################

https://learn.codeinstitute.net/courses/course-v1:CodeInstitute+FST101+2021_T1/courseware/dc049b343a9b474f8d75822c5fda1582/685f99dc7b6c41e497b402adbc97dfaa/?child=first


db.sqlite3 is our database for the project. DO NOT DELETE OR CHANGE THIS FILE


Create your app
    * python3 manage.py startapp todo

Give your app content
    Go to views.py in todo folder
    Create function
        
        def say_hello(request):
            return HttpResponse("Hello!")

Make it visible
    Go to urls.py
    import function from views

        from todo.views import say_hello

    Define url to trigger function and return http HttpResponse

        path('hello/', say_hello, name='hello')

View the page

    python3 manage.py run server
    add hello/ to the end of the url
    Hey presto, your broswer is saying hello to you


############################
LESSON 3 - TEMPLATES
############################

https://learn.codeinstitute.net/courses/course-v1:CodeInstitute+FST101+2021_T1/courseware/dc049b343a9b474f8d75822c5fda1582/ed4360267fc348d8b1113b26c7e7511a/?child=first


	• Create templates folder in todo
	• Create todo folder in templates
  	• Create todo_list.html in todo
		○ Set up using ! Tab
		○ Enter some body content
	• Go back to views.py
		○ Render template instead of inserting html directly
			def get_todo_list(request):
			    return render(request, 'todo/todo_list.html')
			
	• Back to urls.py
		○ Update path
			§ path('', get_todo_list, name='get_todo_list')
		○ Change import
			§ from todo.views import get_todo_list
			
	• Settings.py
        Add todo to INSTALLED APPS

run again and your body content will be visible

############################
LESSON 4 - MIGRATIONS AND ADMIN
############################

https://learn.codeinstitute.net/courses/course-v1:CodeInstitute+FST101+2021_T1/courseware/dc049b343a9b474f8d75822c5fda1582/23c1b3c9572a4fc4ad169d67f1ead946/?child=first


When we run our python file at the moment we're getting errors regarding migrations. Let's address that.

	• python3  manage.py makemigrations --dry-run
		○ Shows database changes
		○ Without the fry run bit this helps convert python code to sql code
	• python3 manage.py showmigrations
	• python3 manage.py migrate --plan
		○ That plan is a flag, to see what it will do
		○ Run this without the flag to make the changes

Add a way to log in and look at the tables in our database, and make changes if necessary
	• python3 manage.py createsuperuser
		○ Create username and password
	
Lets login 
	• Go to preview of site
	• Add /admin/ to end of url
    • Enter the details you just created

############################
LESSON 5 - MODELS
############################

https://learn.codeinstitute.net/courses/course-v1:CodeInstitute+FST101+2021_T1/courseware/dc049b343a9b474f8d75822c5fda1582/b0b40af73cf444e88bc2fd4f385c54b8/?child=first

Models are like excel spreadsheets. 

Database = excel spreadsheet
Table = one excel sheet
Common info = sheet headings in first row
Data entries = subsequent rows

You basically need to replicate this with python

	• Go to models.py in todo
		○ Create a class, which is like the sheet name in excel
			    Class Item(models.Model:

		○ Define the attributes that our individual items will have.
			name = models.CharField(max_length=50, null=False, blank=False)
            done = models.BooleanField(null=False, blank=False, default=False)


############################
LESSON 6 - CREATING DATA
############################

############################
LESSON 7 - MODIFYING DATA
############################

############################
LESSON 8 - TESTING
############################

############################
LESSON 9 - DEPLOYMENT
############################